/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *prev = NULL;
        int carry = 0;
        ListNode* root;
        while(l1 && l2){
            int s = l1->val + l2->val + carry;
            ListNode *node = new ListNode(s%10);
             carry = s/10;
            if(prev) prev->next = node;
            else root = node;
            prev = node;
            l1 = l1->next;
            l2 = l2->next;
        }
        while(l1){
            int s = l1->val + carry;
            ListNode *node = new ListNode(s%10);
             carry = s/10; 
            if(prev) prev->next = node;
            prev = node;
            l1 = l1->next;
        }
         while(l2){
            int s = l2->val + carry;
            ListNode *node = new ListNode(s%10);
             carry = s/10; 
            if(prev) prev->next = node;
            prev = node;
            l2 = l2->next;
        }
        if(carry){
            ListNode *node = new ListNode(carry);
            if(prev) prev->next = node;
        }
        return root;
    }
};